openapi: 3.0.0
info:
  title: weather-watch
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
  - url: https://weather-watch-delta.vercel.app/api
components:
  securitySchemes:    
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: users
  - name: roles
  - name: weather
paths:
  /users:
    get:
      tags:
        - users
      summary: list
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '0'
        - name: per_page
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}:
    delete:
      tags:
        - users
      summary: remove
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - users
      summary: show
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /roles:
    get:
      tags:
        - roles
      summary: list
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /roles/{roleId}:
    get:
      tags:
        - roles
      summary: show
      parameters:
        - name: roleId
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /roles/{id}:
    delete:
      tags:
        - roles
      summary: remove
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /weather:
    get:
      tags:
        - weather
      summary: get
      security:
        - basicAuth: []
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-04-05T00:00:00Z'
        - name: interval
          in: query
          schema:
            type: string
          example: PT12H
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-04-05T12:00:00Z'
        - name: location
          in: query
          schema:
            type: number
          example: 52.520551,13.461804
        - name: parameters
          in: query
          schema:
            type: string
          example: t_mean_2m_12h:F
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /register:
    post:
      tags:
        - General
      summary: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: "{\r\n    // \"name\": \"Juan Marcon\",\r\n    // \"email\": \"juanmarcon1080+3@gmail.com\",\r\n    // \"password\": \"test123*\",\r\n    \"name\": \"\",\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"confirmPassword\": \"test123*\"\r\n}"
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login:
    post:
      tags:
        - General
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: juanmarcon1080@gmail.com
                password: test123e
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
